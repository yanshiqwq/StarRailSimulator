import EventEmitter from 'events';
export const battleEventEmitter = new EventEmitter();

export enum SRPath {
	THE_HUNT, DESTRUCTION, ERUDITION, NIHILITY, HARMONY, PRESERVATION, ABUNDANCE
}

export enum SRElement {
	PHYSICAL, FIRE, ICE, LIGHTNING, WIND, QUANTUM, IMAGINARY
}


export enum SREvent {
	ENEMY_ENTERED = "ENEMY_ENTERED",
	CHARACTER_ATTACKED = "CHARACTER_ATTACKED",
	ENEMY_BREAKED = "ENEMY_BREAKED",
	CHARACTER_ULTIMATE_TRIGGERED = "CHARACTER_ULTIMATE_TRIGGERED",
	CHARACTER_SKILL_TRIGGERED = "CHARACTER_SKILL_TRIGGERED",
	CHARACTER_BASIC_TRIGGERED = "CHARACTER_BASIC_TRIGGERED",
	ENTITY_HEALTH_CHANGED = "ENTITY_HEALTH_CHANGED",
	ENEMY_KILLED = "ENEMY_KILLED",
	CHARACTER_KNOCKED_DOWN = "CHARATCER_KNOCKED_DOWN",
	CHARACTER_BEFORE_ATTACK = "CHARACTER_BEFORE_ATTACK",
	CHARACTER_CRITED = "CHARACTER_CRITED",
	CHARACTER_TALENT_TRIGGERED = "CHARACTER_TALENT_TRIGGERED",
	BATTLE_WAVE_CLEARED = "BATTLE_WAVE_CLEARED",
	BATTLE_BEFORE_ACTION_VALUE_CHANGE = "BATTLE_BEFORE_ACTION_VALUE_CHANGE",
	BATTLE_ACTION_VALUE_CHANGED = "BATTLE_ACTION_VALUE_CHANGED",
	BATTLE_FINISHED = "BATTLE_FINISHED",
	BATTLE_NEW_WAVE = "BATTLE_NEW_WAVE",
	ENTITY_ROUND_STARTED = "ENTITY_ROUND_STARTED",
	ENTITY_BEFORE_DOT_SETTLE = "ENTITY_BEFORE_DOT_SETTLE",
	ENTITY_DOT_SETTLED = "ENTITY_DOT_SETTLED",
	ENTITY_ROUND_ENDED = "ENTITY_ROUND_ENDED",
	BUFF_DURATION_CHANGED = "BUFF_DURATION_CHANGED",
	BUFF_DURATION_ADDED = "BUFF_DURATION_ADDED",
	BUFF_DURATION_REMOVED = "BUFF_DURATION_REMOVED",
	BUFF_APPLIED = "BUFF_APPLIED",
	BUFF_DISPELLING_FAILED = "BUFF_DISPELLING_FAILED",
	BUFF_DISPELLED = "BUFF_DISPELLED",
	BUFF_REMOVED = "BUFF_REMOVED",
	BUFF_EFFECT_RESISTANCED = "EFFECT_RESISTANCED",
	ENTITY_MAX_HEALTH_CHANGED = "ENTITY_MAX_HEALTH_CHANGED",
	ENTITY_HEALTH_RECOVERED = "ENTITY_HEALTH_RECOVERED",
	ENTITY_OVERHEALED = "ENTITY_OVERHEALED",
	ENTITY_HEALTH_DAMAGED = "ENTITY_HEALTH_DAMAGED",
	ENTITY_ZERO_HEALTH = "ENTITY_ZERO_HEALTH",
	BUFF_EXPIRED = "BUFF_EXPIRED"
}

export function translateSRElement(element: SRElement){
	switch (element) {
		case SRElement.PHYSICAL: return "物理";
		case SRElement.FIRE: return "火";
		case SRElement.ICE: return "冰";
		case SRElement.LIGHTNING: return "雷";
		case SRElement.WIND: return "风";
		case SRElement.QUANTUM: return "量子";
		case SRElement.IMAGINARY: return "虚数";
		default: return "未知";
	}
}

export enum TargetType {
	CHARACTER, ENEMY
}

export enum Selector {
	SINGLE, BLAST, AOE, BOUNCE, SINGLE_BOUNCE, AOE_BOUNCE
}

export enum Position {
	ENEMY_0, ENEMY_1, ENEMY_2, ENEMY_3, ENEMY_4,
	CHARACTER_0, CHARACTER_1, CHARACTER_2, CHARACTER_3
}